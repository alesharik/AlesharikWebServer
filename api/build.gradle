import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: "com.github.johnrengelman.shadow"

buildDir = new File('./out/')

//====================Cleaning====================\\

clean.doFirst {
    delete 'deploy'
    delete 'build'
    delete 'out'
    delete buildDir.toString()
    delete projectDir.toString() + "/reporting/"
}

//====================Config====================\\

repositories {
    mavenCentral()
    mavenLocal()
}

sourceSets {
    main {
        java {
            srcDirs 'src'
        }
    }
    test {
        java {
            srcDirs 'test'
        }
        resources {
            srcDirs 'test-res'
        }
    }
}

dependencies {
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.6'
    compile group: 'org.apache.commons', name: 'commons-configuration2', version: '2.1.1'
    compile group: 'org.jsoup', name: 'jsoup', version: '1.9.2'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1205-jdbc42'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile (group: 'log4j', name: 'log4j', version: '1.2.15') {
        exclude module: 'jms'
        exclude module: 'jmxtools'
        exclude module: 'jmxri'
    }

    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.0'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'com.opencsv', name: 'opencsv', version: '3.9'

    compile group: 'org.glassfish.tyrus', name: 'tyrus-container-jdk-client', version: '1.13.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly', version: '1.2.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-spi', version: '1.13.1'
    compile group: 'org.glassfish.tyrus', name: 'tyrus-core', version: '1.13.1'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-framework', version: '2.3.3'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-server', version: '2.3.3'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-servlet', version: '2.3.3'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-framework-monitoring', version: '2.3.3'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-monitoring', version: '2.3.3'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-http-server-monitoring', version: '2.3.3'

    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.6'
    compile group: 'org.glassfish.grizzly', name: 'grizzly-websockets', version: '2.3.3'

    compile group: 'javax.websocket', name: 'javax.websocket-api', version: '1.0'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'

    compile group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.18'
    compile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.18'

    testCompile group: 'junit', name: 'junit', version: '4.10'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.7.21'
    testCompile project(':alesharikwebserver-test')
    compile group: 'org.openjdk.jcstress', name: 'jcstress-core', version: '0.3'

    compile files('one-nio/one-nio.jar')
    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'

    compile project(':alesharikwebserver-internals')
    compile project(':alesharikwebserver-agent')
}

//====================Build====================\\
test.dependsOn shadowJar

shadowJar {
    baseName = project.name + '-all'
    classifier = null
    version = null
}

task benchmarkShadowJar(type: ShadowJar, dependsOn: jar) {
    baseName = project.name + '-benchmark-all'
    classifier = null
    version = null

    manifest {
        attributes 'Main-Class': 'com.alesharik.webserver.benchmark.BenchmarkRunner'
    }

    from(project.convention.getPlugin(JavaPluginConvention).sourceSets.main.output
            + subprojects
                .collect { it.sourceSets.test.output}
                .inject(project.convention.getPlugin(JavaPluginConvention).sourceSets.test.output) {
                    item1, item2 -> item1 + item2
                })
    configurations = [project.configurations.runtime]
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
}

jar {
    baseName = project.name
    archiveName = baseName + ".jar"
    manifest {
        attributes(
                'Premain-Class': 'com.alesharik.webserver.api.agent.Agent',
                'Agent-Class': 'com.alesharik.webserver.api.agent.Agent',
                'Can-Retransform-Classes': 'true',
                'Can-Redefine-Classes': 'true'
        )
    }
    from {
        configurations.compile
                .filter { it.toString().contains("one-nio") }
                .collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

build {}
build.dependsOn test

//====================Publishing====================\\

javadoc.destinationDir = new File(buildDir.toString() + '/javadoc/')

task packageJavadoc(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
    group = 'build'
}

task packageSources(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
    group = 'build'
}

artifacts {
    archives packageJavadoc
    archives packageSources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.alesharik'
            artifactId 'alesharikwebserver-api'
            version this.version

            from components.java
        }
    }
}